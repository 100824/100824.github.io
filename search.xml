<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>浏览器插件</title>
      <link href="/2020/03/22/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/"/>
      <url>/2020/03/22/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之所以说是浏览器插件而不是Chrome插件是因为我本来想要使用chrome的插件功能，但是之前一直都是在用360极速浏览器，<br>上网查了一下，突然发现原来的浏览器添加插件也是非常方便，加上自己平时习惯了用360，就直接上手360浏览器的插件，<br>知乎简书等文章说google主要优势是快，其实我平时也没啥感觉原来的浏览器会慢。</p><h3 id="油猴"><a href="#油猴" class="headerlink" title="油猴"></a>油猴</h3><p>这个插件真的牛逼，用过才知道，直接在浏览器插件那里搜索tampermonkey，添加后即可使用<br><a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">https://greasyfork.org/zh-CN</a> 这个地址是搜索油猴脚本的网站，免费看视频，百度云盘不限速，各种资源，浏览器快捷翻译等功能都能找到</p><h3 id="vimium"><a href="#vimium" class="headerlink" title="vimium"></a>vimium</h3><p>这个插件可以使你摆脱鼠标的束缚，网页上面的所有链接都可以用键盘打开，只需要按下f键，整个页面的链接就会变成字母，按下对应的字母就能跳转到相应链接（自己试试就知道了）</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>前端学习路线（小A）</title>
      <link href="/2020/03/21/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%EF%BC%88%E5%B0%8FA%EF%BC%89/"/>
      <url>/2020/03/21/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%EF%BC%88%E5%B0%8FA%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是Web前端？"><a href="#什么是Web前端？" class="headerlink" title="什么是Web前端？"></a>什么是Web前端？</h2><p>Web前端是互联网时代软件产品研发中不可缺少的角色。从广义上来讲，所有用户终端产品与视觉和交互有关的部分，都属于前端工程师的专业领域。</p><p>从狭义上讲，Web前端就是使用HTML、CSS、Java等专业技能和工具将产品的UI设计稿实现成网站产品，涵盖用户PC端、移动端等网页，处理视觉和交互问题。</p><p>在Web前端这个岗位兴起之前，html+css的工作是被视觉人员所承担的，而js这部分则是由后端完成的。随着智能手机和移动互联网的普及，PC端、手机端、mobile端等五花八门的应用占领着每个人的手机，随之而来各种定制化的UI风格让兼容问题变得越来越头疼。因此，有企业开始把html+css+js这部分工作独立出来，由一个新的岗位来处理，成为了一个处理视觉和交互的综合岗位，这才有了Web前端这个岗位的出现。</p><p>因此，Web前端开发行业是伴随Web兴起而细分出来的行业。实际上，Web前端是最接近产品和设计的工程师，起到衔接产品和技术的作用，它存在在互联网的每个角落，我们使用的微信里面的各种功能、小程序等都离不开web前端技术。</p><h2 id="Web前端的前景和就业形势、薪酬如何？"><a href="#Web前端的前景和就业形势、薪酬如何？" class="headerlink" title="Web前端的前景和就业形势、薪酬如何？"></a>Web前端的前景和就业形势、薪酬如何？</h2><p>学习Web前端的就业面很广，选择的岗位有：前端开发工程师、资深前端开发工程师、网站重构工程师、前端架构师等等。</p><p>虽然近两年大数据、人工智能等很火，但Web前端开发依然是十分热门的，特别是随着谷歌、YouTube、FireFox等大型企业纷纷将视线转向HTML5，前端开发已经进入HTML5时代，所以，Web前端在今后十年仍有很大的发展空间。</p><p>据统计，我国HTML5前端工程师人员的缺口将达到10多万，因此，Web前端工程师是一个非常有“钱”途的职业，并且薪酬会根据技能的深入而有不同程度的增长，其中北京、上海、广州、深圳等地前端工程师的薪资待遇更是一路飙升。</p><p>就目前的广州来说，Web前端新手的月薪大概5000元左右；工作经验3年以上、有代表性作品的，月薪在一万元左右；高手级别的月薪两三万元不成问题；大师级别的会更高。<br><img src="https://pic3.zhimg.com/80/v2-f015ec98793b5375823035ac566d139a_hd.jpg" alt="image"></p><p><img src="https://pic3.zhimg.com/80/v2-f05fb27927cfbfda7cd1e2c26c227a6e_hd.jpg" alt="image"></p><h3 id="2-大量的行业内技术不精的人造成市场饱和的假象"><a href="#2-大量的行业内技术不精的人造成市场饱和的假象" class="headerlink" title="2.大量的行业内技术不精的人造成市场饱和的假象"></a>2.大量的行业内技术不精的人造成市场饱和的假象</h3><p>前端入门学习门槛比较低，所以很多人认为HTML、CSS、JavaScript是很简单就掌握的东西，以为在网上看点乱七八糟的教程，随便看看书，用HTML、CSS做个网页布局就可以入门了。如果真是这样，那基本每个人只要花点时间，随便学一下，就可以入行前端了，就可以称为前端开发工程师了，那还得了。</p><p>现在很多人就是这样，想着软件开发行业可以拿高薪，想快速入门做开发，这种想法其实没有错。但是只看一点点基础，随便学点东西，只会一点点皮毛就不再深入拓展，这样的技术水平，就算数量再多，市场对专业的前端开发需求依然是只增不减，不会有任何影响的。</p><p>大家可以直接去看市场数据：<br><img src="https://pic1.zhimg.com/80/v2-3200273b2321981e44db86da3833f778_hd.jpg" alt="image"></p><h3 id="那么前端开发工程师的未来路在何方？"><a href="#那么前端开发工程师的未来路在何方？" class="headerlink" title="那么前端开发工程师的未来路在何方？"></a>那么前端开发工程师的未来路在何方？</h3><p>随着前端开发技术发展，移动端应用、小程序、H5游戏出现。前端开发应用场景不断拓展。走向更专业和工程化的发展。</p><p>在以后，互联网的大量工作将会需要前端开发来完成：</p><p>播放器/游戏：H5代替Flash，如Web Audio、Web Video、Canvas<br>日常办公软件（复杂应用，并且慢慢从桌面程序演化为Web）：Office、Email、文档管理、产品设计、项目管理、代码编辑器<br>大数据/AI配套软件（复杂应用，并且慢慢从桌面程序演化为Web）：需要大量的后台系统来做数据分析/机器学习<br>容器/小程序：支付宝/微信/钉钉容器，各种行业功能小程序（拥有大量原生APP功能的APP成为互联网新趋势）<br>产品信息展示类网站（炫酷应用）：各种智能设备官网、大企业官网</p><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><h3 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h3><p>每种方向使用的编译器都不一致，选择好的编译器就选择了好的起步，在这里推荐VS code编译器，快捷健十分广泛，打码十分方便。同时代码风格要注重，杂乱无章的代码要整理简洁、舒适 好看。</p><p><a href="https://www.jianshu.com/p/11554732b323" target="_blank" rel="noopener">VS code的使用</a></p><h3 id="代码托管"><a href="#代码托管" class="headerlink" title="代码托管"></a>代码托管</h3><p>每一次更改代码都可能会导致代码增删除改的错误出现，代码托管可以防止出现这种错误。在这里推荐使用git码云的代码托管。当然还可以适当了解github、SVN等托管方式（原理一致）。多人开发的话也可以使用码云。以下为廖雪峰的git教程。</p><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">git学习</a></p><h2 id="小A前端学习路线"><a href="#小A前端学习路线" class="headerlink" title="小A前端学习路线"></a>小A前端学习路线</h2><p>首先，无论学任何一个技术，都是从零基础开始的，前端开发也是一样。做软件开发，是从事编程开发工作，必须先从语法基础开始学习，通过语法组成产品效果。</p><p>前端开发的基础语法，由HTML+CSS+JavaScript组成，这是前端开发<strong>最基本</strong>的3个语言。</p><h4 id="HTML-CSS-JS基础"><a href="#HTML-CSS-JS基础" class="headerlink" title="HTML+CSS+JS基础"></a>HTML+CSS+JS基础</h4><ul><li><p><strong>HTML+CSS</strong></p><p>HTML进阶、CSS进阶、div+css布局、HTML+css整站开发。</p></li><li><p><strong>JavaScript基础</strong></p><p>理解面向对象编程、Js基础教程、js内置对象常用方法、常见DOM树操作大全、ECMAscript、DOM、BOM、定时器和焦点图。</p></li><li><p><strong>JQuery：基础使用</strong></p><p>悬着器、DOM操作、特效和动画、方法链、拖拽、变形、JQueryUI组件基本使用。</p></li></ul><h4 id="HTML-CSS-JS进阶"><a href="#HTML-CSS-JS进阶" class="headerlink" title="HTML+CSS+JS进阶"></a>HTML+CSS+JS进阶</h4><ul><li><p><strong>JS高级特征</strong></p><p>正则表达式、排序算法、递归算法、闭包、函数节流、作用域链、基于距离运动框架、面向对象基础。</p></li><li><p><strong>HTML5：</strong></p><p>HTML5新语义标签、HTML5表单、音频和视频、离线和本地存储</p></li><li><p><strong>CSS3：</strong></p><p>CSS3新选择器、伪元素、脸色表示法、边框、阴影、background系列属性改变、Transition、动画、景深和深透、3D效果制作、元素进场、出场策略、炫酷CSS3网页制作。</p></li></ul><h4 id="HTTP服务和AJAX编程"><a href="#HTTP服务和AJAX编程" class="headerlink" title="HTTP服务和AJAX编程"></a>HTTP服务和AJAX编程</h4><ul><li><p><strong>AJAX上篇：</strong></p><p>Ajax简介和异步的概念、Ajax框架的封装、XMLHttpRequest对象详细介绍方法、兼容性处理方法、Ajax框架的封装、Ajax中缓存问题、XML介绍和使用</p></li><li><p><strong>AJAX下篇：</strong></p><p>JSON和JSON解析、数据绑定和模板技术、JSONP、跨域技术、图片预读取和lazy-load技术、jQuery框架中的AjaxAPI。</p></li></ul><h3 id="学习资料推荐"><a href="#学习资料推荐" class="headerlink" title="学习资料推荐"></a>学习资料推荐</h3><ul><li>W3school</li><li>菜鸟教程</li><li>《Head FirstHTML与CSS（第二版）》</li><li>《css权威指南》</li><li>《css世界》</li><li>《dom编程艺术》</li><li>《Javascript高级程序设计》</li><li>《锋利的jQuery》</li><li>《Javascript权威指南》</li><li>廖雪峰JS：<a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1023020745357888" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/1022910821149312/1023020745357888</a> </li></ul><h5 id="视频资料"><a href="#视频资料" class="headerlink" title="视频资料"></a>视频资料</h5><p>网易云课堂：</p><p>web前端开发JavaScript精英课js：</p><p><a href="https://study.163.com/course/introduction.htm?courseId=1004170004&amp;_trace_c_p_k2_=94371ee5856048719b8508f46f1c9842" target="_blank" rel="noopener">https://study.163.com/course/introduction.htm?courseId=1004170004&amp;_trace_c_p_k2_=94371ee5856048719b8508f46f1c9842</a></p><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p>无论是学习前端还是学习其他的知识，一定要注意实践、实践、实践！知识可以先从官方文档获取，解决方法也可以上csdn、简书、博客园上搜索别人的解决的坑，但是不实践，不做项目就一定不会进步并且学习到不同的知识。</p><p>在此建议小盆友们可以写写csdn博客，总结每一个项目收获的东西知识。每一次学习的总结都会是一次豁然开朗的体会。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git的使用</title>
      <link href="/2020/03/21/git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/03/21/git%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="git：分布式版本控制系统"><a href="#git：分布式版本控制系统" class="headerlink" title="git：分布式版本控制系统"></a>git：分布式版本控制系统</h3><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><p>创建版本库  </p><ol><li>先创建一个文件夹</li><li>git init</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VScode上手教程</title>
      <link href="/2020/03/14/VScode%E4%B8%8A%E6%89%8B%E6%95%99%E7%A8%8B/"/>
      <url>/2020/03/14/VScode%E4%B8%8A%E6%89%8B%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="vscode上手教程"><a href="#vscode上手教程" class="headerlink" title="vscode上手教程"></a>vscode上手教程</h2><p>由于电脑太多个软件，pycharm，goland，sublime，还有对markdowm的支持不是很友好，所以决定上手传说中强大的vscode  </p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>直接从官网下载即可<br><a href="https://code.visualstudio.com" target="_blank" rel="noopener">https://code.visualstudio.com</a></p><h3 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h3><p>为了方便熟悉软件，先使用了汉化版，直接在插件搜索chinese，点击install之后重启，就OK了</p><h3 id="接入linux子系统"><a href="#接入linux子系统" class="headerlink" title="接入linux子系统"></a>接入linux子系统</h3><p>打开后提示我可以安装一个插件，用于直接打开及编辑linux子系统的文件（非常方便），于是就按着提示下载了（remote-WLS）。试了一下，的确非常方便，可以直接打开linux的整个工作目录，而且也能直接运行命令行的命令。</p><h3 id="搭建运行环境"><a href="#搭建运行环境" class="headerlink" title="搭建运行环境"></a>搭建运行环境</h3><p>万能语言运行环境 （Code Runner），安装这个插件，然后打开某个.py文件，ctrl+shift+N即可运行，非常方便</p><h3 id="搭建python环境"><a href="#搭建python环境" class="headerlink" title="搭建python环境"></a>搭建python环境</h3><p>第一次打开.py文件会提示你安装python的插件，按提示安装后就可以调试代码了（前提是电脑已经安装了python）</p><h3 id="远程开发工具"><a href="#远程开发工具" class="headerlink" title="远程开发工具"></a>远程开发工具</h3><p>插件Remote Development，通过SSH(Secure Shell)的方式连接到远程服务器，开发很方便，先记着，以后会用到。</p><h3 id="markdowm插件"><a href="#markdowm插件" class="headerlink" title="markdowm插件"></a>markdowm插件</h3><p>Markdown Preview Enhanced，预览的界面得到优化<br>Markdown PDF 可以直接导出pdf  </p><h3 id="leetcode插件"><a href="#leetcode插件" class="headerlink" title="leetcode插件"></a>leetcode插件</h3><p>直接搜索leetcode插件安装，可能需要另外安装node.js，然后输入登录的账号密码就可以在vscode上刷leetcode</p><h3 id="快捷操作"><a href="#快捷操作" class="headerlink" title="快捷操作"></a>快捷操作</h3><ul><li>F5              开启调试  </li><li>ctrl+shift+ `   打开终端 </li><li>ctrl+shift+F    打开搜索</li><li>ctrl + delete   删除右边</li><li>home            跳到行头</li><li>end             跳到行尾</li><li>ctrl            单词切分</li><li>Ctrl + ←   删除整个单词</li><li>shift 加方向键 选取</li><li>ctrl+shift+ N  打开新的窗口</li><li>ctrl+shift+ W  关闭当前窗口</li><li>ctrl+ P 快速打开</li><li>ctrl+shift+ P 显示命令面板</li><li>ctrl+shift+ \  跳转到匹配括号</li><li>ALT+ ↑  ↓    当前行上移下移</li><li>ctrl + C    复制行</li><li>ctrl + X    剪切行</li><li>ctrl + shift  ↑  ↓  向上向下复制当前行 </li><li>ctrl + shift + K  删除行 </li><li>ctrl + home   跳到文章开头</li><li>ctrl + end    跳到文章末</li><li>ctrl + G  跳转到。。行</li><li>ctrl + H  替换</li><li>ctrl + D  跳到下一个查找匹配</li><li>F12   跳转到定义</li><li>shift + F12  显示引用</li><li>ctrl + K 再加F12  将定义打开到侧边</li><li>ctrl + F4 关闭当前标签页</li><li>ctrl + -  =  放大，缩小</li><li>ctrl + B  打开关闭侧边栏</li><li>F5 调试  </li><li>继续F5  下一个断点 </li><li>F11 下一步</li><li>shift + F5  停止调试</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法02</title>
      <link href="/2020/03/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%9502/"/>
      <url>/2020/03/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%9502/</url>
      
        <content type="html"><![CDATA[<h2 id="七天算法训练营-题集"><a href="#七天算法训练营-题集" class="headerlink" title="七天算法训练营(题集)"></a>七天算法训练营(题集)</h2><p>七天七道leetcode的题</p><h3 id="day-1"><a href="#day-1" class="headerlink" title="day 1"></a>day 1</h3><p>《remove-duplicates-from-sorted-array》</p><p><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/</a></p><p>题目：<br>给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。<br>不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。</p><p>解题思路：由于是有序数组，所以直接遍历一遍，比较相邻的数，如果相同就把后一个pop掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Solution(object):</span><br><span class="line">    def removeDuplicates(self, nums):</span><br><span class="line">        listlen &#x3D; len(nums)</span><br><span class="line">        if listlen &#x3D;&#x3D; 0 or listlen &#x3D;&#x3D; 1:</span><br><span class="line">            return listlen</span><br><span class="line">        i &#x3D; 1</span><br><span class="line">        while i &lt; listlen:</span><br><span class="line">            if nums[i] !&#x3D; nums[i-1]:</span><br><span class="line">                i +&#x3D; 1</span><br><span class="line">            else:</span><br><span class="line">                nums.pop(i)</span><br><span class="line">                listlen -&#x3D; 1</span><br><span class="line">        return i</span><br></pre></td></tr></table></figure><h3 id="day-2"><a href="#day-2" class="headerlink" title="day 2"></a>day 2</h3><p>《rotate-array》</p><p><a href="https://leetcode-cn.com/problems/rotate-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/rotate-array/</a></p><p>题目：给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。</p><p>解题思路：<br>1.循环k次，每一次pop掉最后一个数，并insert到最前<br>2.用切片方法，对数字拼接，同理第一种<br>3.用旋转次数对数组长度取余，得到实际旋转的次数，再用切片方法一次完成旋转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def rotate(self, nums: List[int], k: int) -&gt; None:</span><br><span class="line">        for i in range(k):</span><br><span class="line">            tmp &#x3D; nums.pop(-1)</span><br><span class="line">            nums.insert(0,tmp)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def rotate(self, nums: List[int], k: int) -&gt; None:</span><br><span class="line">        for i in range(k):</span><br><span class="line">            tmp &#x3D; [1]</span><br><span class="line">            tmp[0] &#x3D; nums.pop(-1)</span><br><span class="line">            nums[:] &#x3D; tmp + nums</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def rotate(self, nums: List[int], k: int) -&gt; None:</span><br><span class="line">        k &#x3D; k % len(nums)</span><br><span class="line">        tmp &#x3D; nums[-k:]</span><br><span class="line">        nums[:] &#x3D; tmp + nums[:-k]</span><br></pre></td></tr></table></figure><h3 id="day-3"><a href="#day-3" class="headerlink" title="day 3"></a>day 3</h3><p>《merge-sorted-array》</p><p><a href="https://leetcode-cn.com/problems/merge-sorted-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/merge-sorted-array/</a></p><p>题目：给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 num1 成为一个有序数组。</p><p>思路：循环m+n次，在将两个数组从头开始对比，若nums1大于nums2，nums1的下标后移一位，如果nums1小于或等于nums2，则将nums1的最后一位pop掉，再将nums2插入，同时下标后移一位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">class Solution(object):</span><br><span class="line">    def merge(self, nums1, m, nums2, n):</span><br><span class="line">        if len(nums2) &#x3D;&#x3D; 0:</span><br><span class="line">            return nums1</span><br><span class="line">        tmp1 &#x3D; 0</span><br><span class="line">        tmp2 &#x3D; 0</span><br><span class="line">        for i in range(m+n):</span><br><span class="line">            if m &#x3D;&#x3D; 0:</span><br><span class="line">                while tmp2 &lt; n:                    </span><br><span class="line">                    nums1.pop()</span><br><span class="line">                    nums1.insert(i,nums2[tmp2])                   </span><br><span class="line">                    tmp2 +&#x3D; 1</span><br><span class="line">                    i +&#x3D; 1</span><br><span class="line">                return nums1</span><br><span class="line">            if nums1[tmp1] &lt;&#x3D; nums2[tmp2]:</span><br><span class="line">                m -&#x3D; 1</span><br><span class="line">            else:                </span><br><span class="line">                nums1.pop()</span><br><span class="line">                nums1.insert(i,nums2[tmp2])</span><br><span class="line">                tmp2 +&#x3D; 1 </span><br><span class="line">                if tmp2 &#x3D;&#x3D; n:</span><br><span class="line">                    break</span><br><span class="line">            tmp1 +&#x3D; 1</span><br><span class="line">        return nums1</span><br></pre></td></tr></table></figure><h3 id="day-4"><a href="#day-4" class="headerlink" title="day 4"></a>day 4</h3><p>《merge-two-sorted-lists》</p><p><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/merge-two-sorted-lists/</a></p><p>题目：将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 </p><p>思路：两个链表从头比较，小的插入新的链表，同时下标后移，当其中一个链表遍历完时，再将另一个链表剩下的部分插入到新的链表后面，空间复杂度略有不足，可以直接创建一个链表头，然后将两个链表的节点一个一个接上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">class Solution(object):</span><br><span class="line">    def mergeTwoLists(self, l1, l2):</span><br><span class="line">        if l1 &#x3D;&#x3D; None:</span><br><span class="line">            return l2</span><br><span class="line">        if l2 &#x3D;&#x3D; None:</span><br><span class="line">            return l1</span><br><span class="line">        tmp1 &#x3D; l1</span><br><span class="line">        tmp2 &#x3D; l2</span><br><span class="line">        newhead &#x3D; ListNode(None)</span><br><span class="line">        newhead.next &#x3D; None</span><br><span class="line">        newlist &#x3D; newhead</span><br><span class="line">        while tmp1 and tmp2:</span><br><span class="line">            cur &#x3D; newlist</span><br><span class="line">            if tmp1.val &lt;&#x3D; tmp2.val :</span><br><span class="line">                newlist.val &#x3D; tmp1.val</span><br><span class="line">                tmp1 &#x3D; tmp1.next</span><br><span class="line">            else:</span><br><span class="line">                newlist.val &#x3D; tmp2.val</span><br><span class="line">                tmp2 &#x3D; tmp2.next</span><br><span class="line">            tmp &#x3D; ListNode(None)</span><br><span class="line">            tmp.next &#x3D; None</span><br><span class="line">            newlist.next &#x3D; tmp</span><br><span class="line">            newlist &#x3D; newlist.next</span><br><span class="line">        if tmp1 &#x3D;&#x3D; None:</span><br><span class="line">            cur.next &#x3D; tmp2</span><br><span class="line">        else:</span><br><span class="line">            cur.next &#x3D; tmp1</span><br><span class="line">        return newhead</span><br></pre></td></tr></table></figure><p>改进方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class Solution(object):</span><br><span class="line">    def mergeTwoLists(self, l1, l2):</span><br><span class="line">        prehead &#x3D; ListNode(-1)</span><br><span class="line"></span><br><span class="line">        prev &#x3D; prehead</span><br><span class="line">        while l1 and l2:</span><br><span class="line">            if l1.val &lt;&#x3D; l2.val:</span><br><span class="line">                prev.next &#x3D; l1</span><br><span class="line">                l1 &#x3D; l1.next</span><br><span class="line">            else:</span><br><span class="line">                prev.next &#x3D; l2</span><br><span class="line">                l2 &#x3D; l2.next            </span><br><span class="line">            prev &#x3D; prev.next</span><br><span class="line"></span><br><span class="line">        # exactly one of l1 and l2 can be non-null at this point, so connect</span><br><span class="line">        # the non-null list to the end of the merged list.</span><br><span class="line">        prev.next &#x3D; l1 if l1 is not None else l2</span><br><span class="line"></span><br><span class="line">        return prehead.next</span><br></pre></td></tr></table></figure><h3 id="day-5"><a href="#day-5" class="headerlink" title="day 5"></a>day 5</h3><p>《two-sum》</p><p><a href="https://leetcode-cn.com/problems/two-sum" target="_blank" rel="noopener">https://leetcode-cn.com/problems/two-sum</a></p><p>题目：给定一个整数数组 nums和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p><p>思路：<br>1.暴力法，直接两次for循环遍历，找出相符条件的数。<br>2.哈希，参考其他大神的方法，能显著提高时间复杂度。</p><p>暴力法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def twoSum(self, nums: List[int], target: int) -&gt; List[int]:</span><br><span class="line">        lenth &#x3D; len(nums)</span><br><span class="line">        for i in range(lenth):</span><br><span class="line">            for j in range(i+1,lenth):</span><br><span class="line">                if nums[i] &#x3D;&#x3D; target - nums[j]:</span><br><span class="line">                    return [i,j]</span><br><span class="line">        return None</span><br></pre></td></tr></table></figure><p>哈希：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def twoSum(nums, target):</span><br><span class="line">    hashmap&#x3D;&#123;&#125;</span><br><span class="line">    for i,num in enumerate(nums):</span><br><span class="line">        if hashmap.get(target - num) is not None:</span><br><span class="line">            return [i,hashmap.get(target - num)]</span><br><span class="line">        hashmap[num] &#x3D; i #这句不能放在if语句之前，解决list中有重复值或target-num&#x3D;num的情况</span><br><span class="line"></span><br><span class="line">作者：lao-la-rou-yue-jiao-yue-xiang</span><br><span class="line">链接：https:&#x2F;&#x2F;leetcode-cn.com&#x2F;problems&#x2F;two-sum&#x2F;solution&#x2F;xiao-bai-pythonji-chong-jie-fa-by-lao-la-rou-yue-j&#x2F;</span><br></pre></td></tr></table></figure><p>后面两道暂时不会，日后再补齐</p><h3 id="day-6"><a href="#day-6" class="headerlink" title="day 6"></a>day 6</h3><p>《design-circular-deque》</p><p><a href="https://leetcode.com/problems/design-circular-deque" target="_blank" rel="noopener">https://leetcode.com/problems/design-circular-deque</a></p><p>题目：</p><p>思路：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="day-7"><a href="#day-7" class="headerlink" title="day 7"></a>day 7</h3><p>《trapping-rain-water》</p><p><a href="https://leetcode.com/problems/trapping-rain-water/" target="_blank" rel="noopener">https://leetcode.com/problems/trapping-rain-water/</a></p><p>题目：</p><p>思路：</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>python处理excel文件</title>
      <link href="/2020/03/04/python%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/"/>
      <url>/2020/03/04/python%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="python处理excel文件"><a href="#python处理excel文件" class="headerlink" title="python处理excel文件"></a>python处理excel文件</h2><p><strong>起因</strong>：女朋友在手动处理excel文件，说她处理得好烦。我就看了一下需求，。发现可以用python来处理。<br><strong>需求</strong>：一个excel表格，只有一列的内容，每隔五行为一道选择题，需要把每道题都拎出来成为独立一行。放入到一个新的表格中。<br><strong>格式</strong>：<br>输入表</p><table><thead><tr><th>A1</th></tr></thead><tbody><tr><td>A2</td></tr><tr><td>A3</td></tr><tr><td>A4</td></tr><tr><td>A5</td></tr><tr><td>B1</td></tr><tr><td>B2</td></tr><tr><td>B3</td></tr><tr><td>B4</td></tr><tr><td>B5</td></tr></tbody></table><p>输出表</p><table><thead><tr><th>A1</th><th align="center">A2</th><th align="center">A3</th><th align="center">A4</th><th align="center">A5</th></tr></thead><tbody><tr><td>B1</td><td align="center">B2</td><td align="center">B3</td><td align="center">B4</td><td align="center">B5</td></tr></tbody></table><p><strong>代码</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#!coding:utf8</span><br><span class="line">import xlrd    #读取模块</span><br><span class="line">import openpyxl  #写入模块</span><br><span class="line"></span><br><span class="line"># 设置好输入和输出文件</span><br><span class="line">f1 &#x3D; xlrd.open_workbook(r&#39;C:\Users\53517\Desktop\人工智能导论题库 (100题).xlsx&#39;)</span><br><span class="line">sheet1 &#x3D; f1.sheet_by_index(1)  #读取excel表格中的第一个表格</span><br><span class="line">num &#x3D; sheet1.col_values(1)  #第一个表格中的第一列</span><br><span class="line"></span><br><span class="line">workbook &#x3D; openpyxl.Workbook()  #临时存储对象</span><br><span class="line">sheet &#x3D; workbook.active</span><br><span class="line">sheet.title &#x3D; &#39;test&#39;  #新生成表的名字</span><br><span class="line">long &#x3D; len(num)     #总行数</span><br><span class="line">print(long)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">k &#x3D; 0</span><br><span class="line">for i in range(0, long&#x2F;5):</span><br><span class="line">    for j in range(0, 5):</span><br><span class="line">        sheet.cell(row&#x3D;i + 1, column&#x3D;j + 1, value&#x3D;str(num[k]))</span><br><span class="line">        k +&#x3D; 1</span><br><span class="line">workbook.save(r&#39;C:\Users\53517\Desktop\output1.xlsx&#39;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法01</title>
      <link href="/2020/02/29/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%9501/"/>
      <url>/2020/02/29/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%9501/</url>
      
        <content type="html"><![CDATA[<h2 id="数据结构与算法训练营"><a href="#数据结构与算法训练营" class="headerlink" title="数据结构与算法训练营"></a>数据结构与算法训练营</h2><h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h3><ul><li>可以练习，每道题起码过五遍</li><li>练习缺项，弱项的地方</li><li>不舒服，不爽，枯燥</li><li>把它变成你的舒适区</li><li>主动型反馈，看别人的代码</li></ul><h3 id="2-切题四件套"><a href="#2-切题四件套" class="headerlink" title="2. 切题四件套"></a>2. 切题四件套</h3><ul><li><ol><li>理解清题意</li></ol></li><li><ol start="2"><li>把所有可能的想法过一遍</li></ol></li><li><ol start="3"><li>写代码</li></ol></li><li><ol start="4"><li>测试用例</li></ol></li></ul><h3 id="3-刷题方法"><a href="#3-刷题方法" class="headerlink" title="3.刷题方法"></a>3.刷题方法</h3><ul><li>第一遍，五分钟思考看题，看答案，分析优劣，并记忆</li><li>第二遍，自己写，对比执行时间与</li><li>第三遍，24小时后再重复练习</li><li>第四遍，一周后，再重复练习</li><li>第五遍，面试前再刷一遍</li></ul><h3 id="操作小技巧"><a href="#操作小技巧" class="headerlink" title="操作小技巧"></a>操作小技巧</h3><ul><li>fn + delete 删除右边</li><li>home 跳到行头</li><li>end 跳到行尾</li><li>ctrl 单词切分</li><li>Ctrl + delete 删除整个单词</li><li>shift 加方向键 选取</li></ul><h3 id="IDE的使用top-tips"><a href="#IDE的使用top-tips" class="headerlink" title="IDE的使用top tips"></a>IDE的使用top tips</h3><ul><li>工欲善其事,必先利其器</li><li>刻意化练习</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/20/hello-world/"/>
      <url>/2020/02/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hi </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>肺炎疫情数据抓取</title>
      <link href="/2020/02/20/%E8%82%BA%E7%82%8E%E7%96%AB%E6%83%85%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8F%96/"/>
      <url>/2020/02/20/%E8%82%BA%E7%82%8E%E7%96%AB%E6%83%85%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8F%96/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
